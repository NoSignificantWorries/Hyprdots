# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="powerlevel10k/powerlevel10k"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='nvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch $(uname -m)"

# Set personal aliases, overriding those provided by Oh My Zsh libs,
# plugins, and themes. Aliases can be placed here, though Oh My Zsh
# users are encouraged to define aliases within a top-level file in
# the $ZSH_CUSTOM folder, with .zsh extension. Examples:
# - $ZSH_CUSTOM/aliases.zsh
# - $ZSH_CUSTOM/macos.zsh
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

. "$HOME/.atuin/bin/env"

eval "$(atuin init zsh)"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

export EDITOR="nvim"
export VISUAL="nvim"


# Created by `pipx` on 2025-07-20 08:36:55
export PATH="$PATH:/home/dmitry/.local/bin"

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init - zsh)"


export FZF_DEFAULT_OPTS=" \
--color=bg+:#313244,bg:#1E1E2E,spinner:#94e2d5,hl:#a6e3a1 \
--color=fg:#CDD6F4,header:#F38BA8,info:#CBA6F7,pointer:#cba6f7 \
--color=marker:#B4BEFE,fg+:#CDD6F4,prompt:#CBA6F7,hl+:#F38BA8 \
--color=selected-bg:#45475A \
--color=border:#6C7086,label:#CDD6F4"


function chose_glob_dir() {
    local dir=$(fd --full-path --type d --hidden ".*" "$HOME" 2>/dev/null | fzf --height=60% --style full --ghost="Chose dir...")
    echo "$dir"
}
function chose_down_dir() {
    local dir=$(fd --full-path --max-depth=1 --type d --hidden ".*" $(pwd) 2>/dev/null | fzf \
        --height=60% \
        --style full \
        --ghost="Chose dir..."
    )
    echo "$dir"
}
function chose_glob_file() {
    local target=$(fd --full-path --type f --type d --hidden --exclude ".git" ".*" "$HOME" 2>/dev/null | fzf --height 40% --style full --ghost="Chose destination..." --reverse --preview "bat --color=always --style=header,grid --line-range :100 {} 2>/dev/null || tree -C {}")
    echo "$target"
}
function chose_down_file() {
    local target=$(fd --full-path --type f --type d --hidden --exclude ".git" ".*" $(pwd) 2>/dev/null | fzf --height 40% --style full --ghost="Chose destination..." --reverse --preview "bat --color=always --style=header,grid --line-range :100 {} 2>/dev/null || tree -C {}")
    echo "$target"
}

function cd_glob_dir() {
    local dir=$(chose_glob_dir)
    if [[ -z "$dir" ]]; then
        return 1
    fi
    cd "$dir"
}
function cd_down_dir() {
    local dir=$(chose_down_dir)
    if [[ -z "$dir" ]]; then
        return 1
    fi
    cd "$dir"
}
function cd_home() {
    cd && clear
}
function cd_up() {
    cd ..
}

function nvim-fzf() {
    local old_dir=$(pwd)

    local target="$1"

    if [[ -z "$target" ]]; then
        return 1
    fi

    if [[ -d "$target" ]]; then
        cd "$target" && nvim
    else
        cd $(dirname "$target") && nvim $(basename "$target")
    fi

    cd "$old_dir"
}

function nvim-fzf-global() {
    local target=$(chose_glob_file)

    nvim-fzf "$target"
}
function nvim-fzf-down() {
    local target=$(chose_down_file)

    nvim-fzf "$target"
}

function search_down() {
    local target=$(fd --full-path --type f --hidden --exclude ".git" ".*" $(pwd) 2>/dev/null | fzf --height 60% --style full --ghost="Chose destination..." --reverse --preview "bat --color=always --style=header,grid --line-range :100 {} 2>/dev/null || tree -C {}")

    if [[ -z "$target" ]]; then
        return 1
    fi

    echo "$target"
}

function rich-preview() {
    local target=$(fd --full-path --max-depth=1 --type f --hidden --exclude ".git" ".*" $(pwd) 2>/dev/null | fzf --height 40% --style full --ghost="Chose destination..." --reverse --preview "bat --color=always --style=header,grid --line-range :100 {} 2>/dev/null || tree -C {}")

    if [[ -z "$target" ]]; then
        return 1
    fi

    rich -c --panel rounded --pager "$target" || return 1
}

function lsd_dir() {
    lsd -a .
}

function tree_dir() {
    tree .
}

bindkey -s '^R' 'rich-preview\n'
bindkey -s '^_' 'search_down\n'
bindkey -s '^E' 'tree_dir\n'
bindkey -s '^A' 'lsd_dir\n'
bindkey -s '^H' 'cd_home\n'
bindkey -s '^[[1;5D' 'cd_up\n'
bindkey -s '^[[1;5A' 'nvim-fzf-global\n'
bindkey -s '^[[1;5B' 'nvim-fzf-down\n'
bindkey -s '^[[1;5C' 'cd_down_dir\n'
bindkey -s '^@' 'cd_glob_dir\n'
bindkey -s '^Y' 'yazi\n'

